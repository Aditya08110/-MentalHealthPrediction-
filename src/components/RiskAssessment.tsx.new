import React, { useState } from 'react';
import { AlertTriangle, AlertCircle, Phone, Heart, BrainCircuit, ArrowRight, Shield } from 'lucide-react';
import { mentalHealthLevels, MentalHealthLevel } from '../types/mentalHealth';

const RiskAssessment: React.FC = () => {
  const [selectedLevel, setSelectedLevel] = useState<MentalHealthLevel | null>(null);

  const emergencyContacts = [
    {
      name: 'National Crisis Lifeline',
      number: '988',
      hours: '24/7',
      description: 'Suicide and crisis lifeline'
    },
    {
      name: 'Crisis Text Line',
      number: 'Text HOME to 741741',
      hours: '24/7',
      description: 'Crisis counseling via text'
    }
  ];

  return (
    <div className="space-y-6">
      <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
        <div className="flex items-center justify-between mb-6">
          <div>
            <h2 className="text-2xl font-bold text-gray-900">Mental Health Risk Assessment</h2>
            <p className="text-gray-600 mt-1">Understanding and classifying mental health conditions</p>
          </div>
          <AlertTriangle className="w-8 h-8 text-orange-500" />
        </div>

        {/* Emergency Alert */}
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
          <div className="flex items-start">
            <AlertCircle className="w-5 h-5 text-red-500 mt-0.5" />
            <div className="ml-3">
              <h3 className="text-sm font-medium text-red-800">Important Notice</h3>
              <p className="mt-1 text-sm text-red-700">
                If you're experiencing thoughts of self-harm or suicide, please seek immediate help.
                Professional support is available 24/7.
              </p>
              <div className="mt-3 space-y-2">
                {emergencyContacts.map((contact, index) => (
                  <div key={index} className="flex items-center space-x-2">
                    <Phone className="w-4 h-4 text-red-500" />
                    <span className="text-sm font-medium text-red-700">{contact.name}:</span>
                    <span className="text-sm text-red-600">{contact.number}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Condition Levels */}
          <div className="space-y-4">
            <h3 className="text-lg font-semibold text-gray-900 flex items-center">
              <BrainCircuit className="w-5 h-5 mr-2 text-blue-500" />
              Condition Levels
            </h3>
            <div className="space-y-3">
              {Object.values(mentalHealthLevels).map((level) => (
                <button
                  key={level.level}
                  onClick={() => setSelectedLevel(level.level)}
                  className={`w-full p-4 rounded-lg border transition-all ${
                    selectedLevel === level.level
                      ? 'border-blue-500 bg-blue-50'
                      : 'border-gray-200 hover:border-blue-500 hover:bg-blue-50'
                  }`}
                >
                  <div className="flex items-center">
                    <div className={`w-3 h-3 rounded-full ${level.color} mr-3`} />
                    <div className="flex-1 text-left">
                      <h4 className="font-medium text-gray-900">{level.title}</h4>
                      <p className="text-sm text-gray-500">{level.description}</p>
                    </div>
                    <ArrowRight className={`w-5 h-5 ${
                      selectedLevel === level.level ? 'text-blue-500' : 'text-gray-400'
                    }`} />
                  </div>
                </button>
              ))}
            </div>
          </div>

          {/* Detailed Information */}
          <div>
            {selectedLevel ? (
              <div className="bg-gray-50 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">
                  {mentalHealthLevels[selectedLevel].title}
                </h3>
                
                <div className="space-y-6">
                  {/* Symptoms */}
                  <div>
                    <h4 className="text-sm font-medium text-gray-900 mb-2">Symptoms:</h4>
                    <ul className="list-disc list-inside space-y-1">
                      {mentalHealthLevels[selectedLevel].symptoms.map((symptom, index) => (
                        <li key={index} className="text-sm text-gray-600">{symptom}</li>
                      ))}
                    </ul>
                  </div>

                  {/* Conditions if available */}
                  {mentalHealthLevels[selectedLevel].conditions && (
                    <div>
                      <h4 className="text-sm font-medium text-gray-900 mb-2">Conditions:</h4>
                      <ul className="list-disc list-inside space-y-1">
                        {mentalHealthLevels[selectedLevel].conditions?.map((condition, index) => (
                          <li key={index} className="text-sm text-gray-600">{condition}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {/* Behavioral Signals */}
                  <div>
                    <h4 className="text-sm font-medium text-gray-900 mb-2">Behavioral Signals:</h4>
                    <ul className="list-disc list-inside space-y-1">
                      {mentalHealthLevels[selectedLevel].behavioralSignals.map((signal, index) => (
                        <li key={index} className="text-sm text-gray-600">{signal}</li>
                      ))}
                    </ul>
                  </div>

                  {/* Treatment */}
                  <div>
                    <h4 className="text-sm font-medium text-gray-900 mb-2">Treatment Approach:</h4>
                    <ul className="list-disc list-inside space-y-1">
                      {mentalHealthLevels[selectedLevel].treatment.map((treatment, index) => (
                        <li key={index} className="text-sm text-gray-600">{treatment}</li>
                      ))}
                    </ul>
                  </div>

                  {/* Help Resources for severe/crisis levels */}
                  {(selectedLevel === 'severe' || selectedLevel === 'crisis') && (
                    <div className="mt-4 p-4 bg-red-50 rounded-lg border border-red-100">
                      <div className="flex items-center">
                        <Heart className="w-5 h-5 text-red-500 mr-2" />
                        <h4 className="text-sm font-medium text-red-800">Need Help Now?</h4>
                      </div>
                      <p className="mt-2 text-sm text-red-700">
                        If you're experiencing these symptoms, please reach out to a mental health professional
                        or emergency services immediately. You don't have to face this alone.
                      </p>
                    </div>
                  )}
                </div>
              </div>
            ) : (
              <div className="bg-gray-50 rounded-lg p-6 flex items-center justify-center h-full">
                <div className="text-center text-gray-500">
                  <Shield className="w-8 h-8 mx-auto mb-2" />
                  <p>Select a condition level to see detailed information</p>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default RiskAssessment;
